name: Deploy Deployment Notifier

on:
  workflow_dispatch:
    inputs:
      app:
        description: "Affected System/Application (must match Excel filename, e.g., Netwin, Alarm Manager)"
        required: true
        type: choice
        options:
          - Alarm Manager
          - Altaia
          - Altice Agora
          - Analytics
          - FF1
          - FFWK
          - IAM
          - NOSSIS Common
          - NetQ
          - Netwin
          - Nokia AMS
          - SIGO WO
          - SIGO TTK
          - SIGO WOv15
      env:
        description: "Environment"
        required: true
        type: choice
        options:
          - Production
          - Test
          - Pre-Production
      date:
        description: "Deployment Date (YYYY-MM-DD)"
        required: true
        type: string
      time:
        description: "Deployment Time (HH:MM, 24h)"
        required: true
        type: string
      downtime:
        description: "Expected Downtime (e.g., 30 minutes or 2 hours)"
        required: true
        type: string
      release:
        description: "Vendor Release Notes / Version (optional)"
        required: false
        type: string
        default: "N/A"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build the static site into ./public (copy everything under deployment-notifier)
      - name: Prepare public folder
        run: |
          rm -rf public
          mkdir -p public
          cp -r deployment-notifier/* public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          # Keep history off for faster deploys
          force_orphan: true

      # Wait for GitHub Pages to actually serve the new content
      - name: Wait for Pages to be live
        run: |
          USERNAME=${GITHUB_REPOSITORY_OWNER}
          REPO=$(basename "$GITHUB_REPOSITORY")
          URL="https://${USERNAME}.github.io/${REPO}/index.html"
          echo "Waiting for $URL ..."
          for i in {1..24}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            if [ "$STATUS" = "200" ]; then
              echo "GitHub Pages is live!"
              exit 0
            fi
            echo "Still not ready (status $STATUS)... retry $i"
            sleep 5
          done
          echo "Timeout: GitHub Pages did not go live in time."
          exit 1

      - name: Build pre-filled link and add to summary
        shell: bash
        run: |
          APP="${{ github.event.inputs.app }}"
          ENV="${{ github.event.inputs.env }}"
          DATE="${{ github.event.inputs.date }}"
          TIME="${{ github.event.inputs.time }}"
          DOWNTIME="${{ github.event.inputs.downtime }}"
          RELEASE="${{ github.event.inputs.release }}"

          # URL-encode (use Python's urllib.parse.quote for reliability)
          enc () { python3 - <<'PY'
import sys, urllib.parse
print(urllib.parse.quote(sys.stdin.read().strip()))
PY
          }

          APP_ENC=$(printf "%s" "$APP" | enc)
          ENV_ENC=$(printf "%s" "$ENV" | enc)
          DATE_ENC=$(printf "%s" "$DATE" | enc)
          TIME_ENC=$(printf "%s" "$TIME" | enc)
          DOWNTIME_ENC=$(printf "%s" "$DOWNTIME" | enc)
          RELEASE_ENC=$(printf "%s" "$RELEASE" | enc)

          USERNAME=${GITHUB_REPOSITORY_OWNER}
          REPO=$(basename "$GITHUB_REPOSITORY")
          BASE_URL="https://${USERNAME}.github.io/${REPO}/index.html"

          LINK="${BASE_URL}?app=${APP_ENC}&env=${ENV_ENC}&date=${DATE_ENC}&time=${TIME_ENC}&downtime=${DOWNTIME_ENC}&release=${RELEASE_ENC}"

          echo "Pre-Filled Link:"
          echo "$LINK"

          {
            echo "## Deployment Notifier"
            echo
            echo "**App:** $APP  "
            echo "**Environment:** $ENV  "
            echo "**Date:** $DATE  "
            echo "**Time:** $TIME  "
            echo "**Downtime:** $DOWNTIME  "
            echo "**Release:** $RELEASE  "
            echo
            echo "[Open Pre-Filled Form]($LINK)"
            echo
            echo "> Note: Excel files must exist at \`deployment-notifier/users/<App>.xlsx\` (e.g., \`users/Netwin.xlsx\`)."
          } >> "$GITHUB_STEP_SUMMARY"
